AWSTemplateFormatVersion: 2010-09-09

Description: >
  AWS CloudFormation Template for a VPC with public and private subnets,
  an EC2 instance in the public subnet, and an RDS instance in the private subnet.

#---------------Metadata-----------------#
# This section defines the GUI interface for the CloudFormation stack parameters in the console, 

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Network Configuration"
        Parameters:
          - VPCCidr
          - PublicSubnetCidr
          - PrivateSubnetCidr
          - PublicSubnetCidr2
          - PrivateSubnetCidr2
      - Label:
          default: "EC2 Configuration"
        Parameters:
          - InstanceType
          - ImageId
          - KeyName
      - Label:
          default: "RDS Configuration"
        Parameters:
          - RDSInstanceClass
          - RDSEngine
          - RDSUsername
          - RDSPassword
    ParameterLabels:
      VPCCidr:
        default: "VPC CIDR Block"
      PublicSubnetCidr:
        default: "Public Subnet CIDR Block"
      PrivateSubnetCidr:
        default: "Private Subnet CIDR Block"
      PublicSubnetCidr2:
        default: "Public Subnet CIDR Block 2"
      PrivateSubnetCidr2:
        default: "Private Subnet CIDR Block 2"
      ImageId:
        default: "Amazon Machine Image" 
      InstanceType:
        default: "EC2 Instance Type"
      RDSInstanceClass:
        default: "RDS Instance Class"
      RDSEngine:
        default: "RDS Database Engine"
      RDSUsername:
        default: "RDS Master Username"
      RDSPassword:
        default: "RDS Master Password"
      KeyName:
        default: "Key pair name"

#---------------Parameters-----------------#
# This section defines parameters that can be customized when creating the CloudFormation stack

Parameters:
  VPCCidr:
    Type: String
    Default: 10.0.0.0/16 # Addresses from 10.0.0.0 to 10.0.255.255 (65,536 IP addresses).
    Description: CIDR block for the VPC     

  PublicSubnetCidr:
    Type: String
    Default: 10.0.1.0/24 # 10.0.1.0 to 10.0.1.255 (256 addresses).
    Description: CIDR block for the public subnet

  PrivateSubnetCidr:
    Type: String
    Default: 10.0.2.0/24 # 10.0.2.0 to 10.0.2.255 (256 addresses).
    Description: CIDR block for the private subnet

  PublicSubnetCidr2:
    Type: String
    Default: 10.0.3.0/24 # 10.0.3.0 to 10.0.3.255 (256 addresses).
    Description: CIDR block for the second public subnet

  PrivateSubnetCidr2:
    Type: String
    Default: 10.0.4.0/24 # 10.0.4.0 to 10.0.4.255 (256 addresses).
    Description: CIDR block for the second private subnet

  ImageId:
    Type: String
    Default: ami-0c02fb55956c7d316xxxxxx
    Description: Amazon Machine Image ID for the EC2 instance. Replace with a valid AMI ID for your region (via GUI).

  InstanceType:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
    Description: EC2 instance type

  RDSInstanceClass:
    Type: String
    Default: db.t3.micro
    AllowedValues:
      - db.t3.micro
      - db.t2.micro
      - db.t2.small
      - db.t2.medium
    Description: RDS instance class

  RDSEngine:
    Type: String
    Default: mysql
    AllowedValues:
      - mysql
      - postgres
      - mariadb
    Description: Database engine for RDS

  RDSUsername:
    Type: String
    Default: admin
    Description: Master username for RDS

  RDSPassword:
    Type: String
    NoEcho: true
    Description: Master password for RDS, > 8 characters

  KeyName:
    Type: String
    Description: Name of the EC2 KeyPair created for SSH   

#---------------Resources-----------------#

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: SampleVPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: SampleInternetGateway

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetCidr
      AvailabilityZone: !Select [0, !GetAZs ""]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnetA

  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnetCidr
      AvailabilityZone: !Select [0, !GetAZs ""]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: PrivateSubnetA

  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetCidr2
      AvailabilityZone: !Select [1, !GetAZs ""]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnetB

  PrivateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnetCidr2
      AvailabilityZone: !Select [1, !GetAZs ""]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: PrivateSubnetB

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: PublicRouteTable

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      RouteTableId: !Ref PublicRouteTable

  PublicSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetB
      RouteTableId: !Ref PublicRouteTable

  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP, HTTPS, and SSH access
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0 # To be restricted
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow MySQL access from EC2 instances
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref EC2SecurityGroup

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      SubnetId: !Ref PublicSubnetA
      SecurityGroupIds:
        - !Ref EC2SecurityGroup
      ImageId: !Ref ImageId
      KeyName: !Ref KeyName
      Tags:
        - Key: Name
          Value: WebServer

  RDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: !Ref RDSInstanceClass
      Engine: !Ref RDSEngine
      MasterUsername: !Ref RDSUsername
      MasterUserPassword: !Ref RDSPassword
      AllocatedStorage: 20
      BackupRetentionPeriod: 0 # Retain backups for 0 days
      VPCSecurityGroups:
        - !Ref RDSSecurityGroup
      DBSubnetGroupName: !Ref DBSubnetGroup
      MultiAZ: true  # Enabling Multi-AZ for high availability

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for RDS instance
      SubnetIds:
        - !Ref PrivateSubnetA
        - !Ref PrivateSubnetB
      Tags:
        - Key: Name
          Value: DBSubnetGroup

#---------------Outputs-----------------#
# The output section exports important resource identifiers, making them accessible to other CloudFormation stacks,
# facilitating resource sharing across stacks.

Outputs:
  VPCId:
    Description: VPC ID
    Value: !Ref VPC
    Export:
      Name: MyStack-VPCId
  PublicSubnetId:
    Description: Public Subnet ID
    Value: !Ref PublicSubnetA
  PrivateSubnetId:
    Description: Private Subnet ID
    Value: !Ref PrivateSubnetA
  PublicSubnetBId:
    Description: Public Subnet B ID
    Value: !Ref PublicSubnetB
  PrivateSubnetBId:
    Description: Private Subnet B ID
    Value: !Ref PrivateSubnetB
  EC2InstanceId:
    Description: EC2 Instance ID
    Value: !Ref EC2Instance
  RDSInstanceEndpoint:
    Description: RDS Instance Endpoint
    Value: !GetAtt RDSInstance.Endpoint.Address
